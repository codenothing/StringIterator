{"name":"Stringiterator","tagline":"","body":"# StringIterator\r\n\r\nHelper tool for iterating over a string\r\n\r\n[![Build Status](https://travis-ci.org/codenothing/StringIterator.png?branch=master)](https://travis-ci.org/codenothing/StringIterator)  \r\n\r\n\r\n### Installation\r\n\r\n```bash\r\n$ npm install string-iterator\r\n```\r\n\r\nStringIterator may also be run in a browser environment\r\n\r\n```html\r\n<script type='text/javascript' src='StringIterator.js'></script>\r\n```\r\n\r\n\r\n### Usage\r\n\r\n```js\r\nvar iter = new StringIterator( \"abcdef\" );\r\niter.each(function( c ) {\r\n\tconsole.log( c ); // each character in the string\r\n});\r\n```\r\n  \r\n\r\nAPI\r\n---\r\n\r\n### iter.index\r\n\r\nThe current index of the iteration\r\n\r\n### iter.character\r\n\r\nThe character at the current index of the iteration\r\n\r\n### iter.line\r\n\r\nThe line that the current index is on of the iteration\r\n\r\n### iter.string\r\n\r\nThe original string passed into the constructor\r\n\r\n### iter.length\r\n\r\nThe length of the original string\r\n\r\n### iter.c\r\n\r\nThe character that the index is currently on\r\n\r\n### iter.prev\r\n\r\nThe character previous to the current index\r\n\r\n### iter.next\r\n\r\nThe character that comes after the current index\r\n\r\n### iter.chars\r\n\r\nThe string broken down into an array of individual characters\r\n\r\n### iter.lines\r\n\r\nThe string split into an array by newline characters\r\n\r\n\r\n### .goto\r\n\r\nJumps index to the given position\r\n\r\n```js\r\n.goto( pos )\r\n```\r\n\r\n\r\n### .each\r\n\r\nIterates over the string, passing each character back to the callback\r\n\r\n```js\r\n.each( callback )\r\n```\r\n\r\n\r\n### .seek\r\n\r\nAuto-skips over the string until it finds the end character (or regex match), and returns the result\r\n\r\n```js\r\n.seek( char )\r\n.seek( regex )\r\n```\r\n\r\n\r\n### .skip\r\n\r\nSkips `n` amount of characters\r\n\r\n```js\r\n.skip( n )\r\n```\r\n\r\n\r\n### .reverse\r\n\r\nReverse iteration `n` amount characters. Or if a function is passed in, until the callback returns false\r\n\r\n```js\r\n.reverse( n )\r\n.reverse( callback )\r\n```\r\n\r\n\r\n### .restart\r\n\r\nResets iteration internals to the start\r\n\r\n```js\r\n.restart()\r\n```\r\n\r\n\r\n### License\r\n\r\n```\r\nThe MIT License\r\n\r\nCopyright (c) 2013 Corey Hart\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}